#!/usr/bin/env ruby
#require 'goliath'
require 'goliath/api'
require 'goliath/runner'

require 'blobsterix'

# runner = Goliath::Runner.new(ARGV, nil)
# runner.api = BlobServer::Service.new
# runner.app = Goliath::Rack::Builder.build(BlobServer::Service, runner.api)
# runner.run
require "fileutils"

BLOBSTERIX_GEM_DIR = File.join(File.dirname(__FILE__), "../")
BLOBSTERIX_DATA_DIR = Dir.pwd

class Generator
  def initialize(args)
    args.each{|command|
      @param ||= command if command != "generate" and @type
      @type ||= command if command != "generate"
    }
  end

  def run()
    puts "Doing #{@type} with #{@param} in #{Dir.pwd}"

    init if @type == "init"
  end

  def init()
    FileUtils.cp(File.join(BLOBSTERIX_GEM_DIR, "config/Gemfile"), File.join(BLOBSTERIX_DATA_DIR, "Gemfile"))
  end
end


exit if ARGV.length == 0
if ARGV[0] == "server"
  require File.join(BLOBSTERIX_DATA_DIR, "blobsterix_config.rb") if (File.exist?(File.join(BLOBSTERIX_DATA_DIR, "blobsterix_config.rb")))
  
  runner = Goliath::Runner.new(ARGV, nil)
  runner.api = BlobServer::Service.new
  runner.app = Goliath::Rack::Builder.build(BlobServer::Service, runner.api)
  runner.run
elsif ARGV[0] == "generate"
  Generator.new(ARGV).run
end
